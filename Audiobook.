<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>üéß –ê—É–¥–∏–æ–∫–Ω–∏–≥–∏ –æ–Ω–ª–∞–π–Ω ‚Äî –±–∏–±–ª–∏–æ—Ç–µ–∫–∞</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    html { scroll-behavior: smooth; }
    :focus-visible { outline: 2px solid; outline-offset: 2px; }
  </style>
</head>
<body class="min-h-screen bg-gray-50 text-gray-900">
  <!-- –®–∞–ø–∫–∞ -->
  <header class="sticky top-0 z-50 bg-white/80 backdrop-blur border-b">
    <div class="max-w-6xl mx-auto px-4 py-3 flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
      <h1 class="text-2xl md:text-3xl font-bold">üéß –ê—É–¥–∏–æ–∫–Ω–∏–≥–∏ –æ–Ω–ª–∞–π–Ω</h1>
      <div class="flex flex-col md:flex-row gap-2 md:items-center w-full md:w-auto">
        <input id="search" type="search" placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É‚Ä¶"
               class="w-full md:w-80 px-3 py-2 rounded-xl border bg-white shadow-sm focus:ring"
               autocomplete="off" />
        <select id="genreFilter" class="px-3 py-2 rounded-xl border bg-white shadow-sm">
          <option value="">–í—Å–µ –∂–∞–Ω—Ä—ã</option>
        </select>
        <select id="sortBy" class="px-3 py-2 rounded-xl border bg-white shadow-sm">
          <option value="title">–ù–∞–∑–≤–∞–Ω–∏–µ (–ê‚Üí–Ø)</option>
          <option value="author">–ê–≤—Ç–æ—Ä (–ê‚Üí–Ø)</option>
          <option value="popularity">–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å</option>
        </select>
      </div>
    </div>
  </header>

  <!-- –ö–æ–Ω—Ç–µ–Ω—Ç -->
  <main class="max-w-6xl mx-auto px-4 py-6 grid md:grid-cols-5 gap-6">
    <!-- –ö–∞—Ç–∞–ª–æ–≥ -->
    <section class="md:col-span-3 lg:col-span-3">
      <h2 class="text-xl font-semibold mb-3">–ö–∞—Ç–∞–ª–æ–≥</h2>
      <div id="list" class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4"></div>
      <div id="emptyState" class="hidden p-6 text-center text-gray-500">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</div>
    </section>

    <!-- –ü–ª–µ–µ—Ä -->
    <aside class="md:col-span-2 lg:col-span-2">
      <div id="viewer" class="sticky top-20 p-4 bg-white rounded-2xl shadow">
        <div class="flex items-start gap-3">
          <div class="w-16 h-16 rounded-xl bg-gray-100 flex items-center justify-center text-2xl" id="cover">üìö</div>
          <div class="flex-1">
            <h3 class="text-lg font-bold" id="title">–í—ã–±–µ—Ä–∏—Ç–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥—É</h3>
            <p class="text-sm text-gray-600" id="meta">–ê–≤—Ç–æ—Ä ‚Ä¢ –ñ–∞–Ω—Ä</p>
          </div>
        </div>
        <p class="mt-3 text-sm text-gray-700" id="description">–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–∏–≥—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–ª–µ–µ—Ä.</p>
        <div class="mt-4">
          <audio id="audio" controls preload="none" class="w-full">
            <source id="audioSrc" src="" type="audio/mpeg" />
            –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ.
          </audio>
        </div>
        <div class="mt-4 flex flex-wrap gap-2">
          <a id="downloadLink" href="#" download class="px-4 py-2 rounded-xl bg-gray-900 text-white hover:opacity-90">‚¨á –°–∫–∞—á–∞—Ç—å</a>
          <button id="copyLink" class="px-4 py-2 rounded-xl border bg-white hover:bg-gray-50">üîó –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É</button>
        </div>
      </div>
    </aside>
  </main>

  <!-- –ü–æ–¥–≤–∞–ª -->
  <footer class="border-t">
    <div class="max-w-6xl mx-auto px-4 py-6 text-sm text-gray-600 flex flex-col md:flex-row justify-between">
      <span>¬© <span id="year"></span> –ê—É–¥–∏–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞</span>
      <span>–°–∞–π—Ç –Ω–∞ GitHub Pages</span>
    </div>
  </footer>

<script>
// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–∏–≥
const BOOKS = Array.from({length: 100}, (_, i) => ({
  id: i+1,
  title: `–ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ ‚Ññ${i+1}`,
  author: `–ê–≤—Ç–æ—Ä ${i+1}`,
  genre: ["–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞","–†–æ–º–∞–Ω","–î–µ—Ç–µ–∫—Ç–∏–≤","–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è","–§–∏–ª–æ—Å–æ—Ñ–∏—è"][i % 5],
  description: `–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ ‚Ññ${i+1}.`,
  cover: "üìñ",
  file: `books/book${i+1}.mp3`,
  popularity: Math.floor(Math.random() * 1000)
}));

const listEl = document.getElementById("list");
const searchEl = document.getElementById("search");
const genreFilter = document.getElementById("genreFilter");
const sortBy = document.getElementById("sortBy");

const viewer = {
  title: document.getElementById("title"),
  meta: document.getElementById("meta"),
  description: document.getElementById("description"),
  cover: document.getElementById("cover"),
  audio: document.getElementById("audio"),
  audioSrc: document.getElementById("audioSrc"),
  download: document.getElementById("downloadLink")
};

// –ñ–∞–Ω—Ä—ã
function renderGenres() {
  const genres = [...new Set(BOOKS.map(b => b.genre))];
  genres.forEach(g => {
    const opt = document.createElement("option");
    opt.value = g;
    opt.textContent = g;
    genreFilter.appendChild(opt);
  });
}

// –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥
function renderBooks() {
  listEl.innerHTML = "";
  let books = BOOKS.slice();

  const q = searchEl.value.toLowerCase();
  if (q) {
    books = books.filter(b => b.title.toLowerCase().includes(q) || b.author.toLowerCase().includes(q));
  }

  if (genreFilter.value) {
    books = books.filter(b => b.genre === genreFilter.value);
  }

  if (sortBy.value === "title") books.sort((a,b) => a.title.localeCompare(b.title));
  if (sortBy.value === "author") books.sort((a,b) => a.author.localeCompare(b.author));
  if (sortBy.value === "popularity") books.sort((a,b) => b.popularity - a.popularity);

  if (!books.length) {
    document.getElementById("emptyState").classList.remove("hidden");
    return;
  } else {
    document.getElementById("emptyState").classList.add("hidden");
  }

  books.forEach(book => {
    const card = document.createElement("div");
    card.className = "p-4 bg-white rounded-xl shadow hover:shadow-md cursor-pointer transition";
    card.innerHTML = `
      <div class="text-3xl mb-2">${book.cover}</div>
      <h3 class="font-semibold">${book.title}</h3>
      <p class="text-sm text-gray-600">${book.author}</p>
      <p class="text-xs text-gray-500">${book.genre}</p>
    `;
    card.onclick = () => openBook(book);
    listEl.appendChild(card);
  });
}

// –û—Ç–∫—Ä—ã—Ç—å –∫–Ω–∏–≥—É
function openBook(book) {
  viewer.title.textContent = book.title;
  viewer.meta.textContent = `${book.author} ‚Ä¢ ${book.genre}`;
  viewer.description.textContent = book.description;
  viewer.cover.textContent = book.cover;
  viewer.audioSrc.src = book.file;
  viewer.audio.load();
  viewer.download.href = book.file;
}

// –°–æ–±—ã—Ç–∏—è
searchEl.addEventListener("input", renderBooks);
genreFilter.addEventListener("change", renderBooks);
sortBy.addEventListener("change", renderBooks);

document.getElementById("copyLink").addEventListener("click", () => {
  if (viewer.audioSrc.src) {
    navigator.clipboard.writeText(viewer.audioSrc.src);
    alert("–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!");
  }
});

document.getElementById("year").textContent = new Date().getFullYear();

renderGenres();
renderBooks();
</script>
</body>
</html>
